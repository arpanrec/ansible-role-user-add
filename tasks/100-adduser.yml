---
- name: Application User | Generate password hash - {{  rv_user_add_username  }}
  shell: >
    import crypt;  print(crypt.crypt("{{  rv_user_add_password  }}", "$1$SomeSalt$"))
  register: rv_user_add_password_hash_tmp
  args:
    executable: "{{  ansible_python_interpreter  }}"
  no_log: true
  when: rv_user_add_password is defined
  changed_when: false

- name: Application User | Adding the group {{  rv_user_add_user_primary_group  }}
  group:
    name: "{{  rv_user_add_user_primary_group  }}"
    gid: "{{ rv_user_add_user_primary_gid | default(omit) }}"
    state: present

- name: Application User | Adding the user {{  rv_user_add_username  }}
  user:
    name: "{{  rv_user_add_username  }}"
    shell: /bin/bash
    state: present
    groups: "{{ (rv_user_add_user_extra_groups | length > 0) | ternary(rv_user_add_user_extra_groups, omit) }}"
    append: "{{ (rv_user_add_user_extra_groups | length > 0) | ternary(true, omit) }}"
    uid: "{{ rv_user_add_uid | default(omit) }}"
    group: "{{  rv_user_add_user_primary_group  }}"
    create_home: yes
    expires: -1
    password: "{{ rv_user_add_password_hash_tmp.stdout | default(omit) }}"
    update_password: on_create

- name: Application User | Deploying SSH Key for {{  rv_user_add_username  }}
  authorized_key:
    user: "{{  rv_user_add_username  }}"
    key: "{{  rv_user_add_ssh_access_public_key  }}"
    state: present
    comment: added by ansible automation
  when: rv_user_add_ssh_access_public_key is defined

- name: Application User | Adding {{  rv_user_add_username  }} to the sudoers
  when: rv_user_add_user_nopasswd_commands | length > 0
  lineinfile:
    path: "{{  rv_user_add_sudoers_file  }}"
    line: "{{  rv_user_add_username  }} ALL=(ALL) NOPASSWD: {{  item  }}"
    create: true
    validate: /usr/sbin/visudo -cf %s
  with_items:
    - "{{  rv_user_add_user_nopasswd_commands  }}"
